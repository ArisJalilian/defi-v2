{"version":3,"sources":["components/ListItem/index.js","components/VoteItem/index.js","components/VoteLogo/index.js","pages/Vote/index.js"],"names":["Wrapper","styled","div","InfoDesc","span","listItem","props","className","title","children","ModifiedJazzicon","Jazzicon","tr","theme","modalBG","bg2","Text","Address","voteItem","address","slice","vote","_numeral","score","symbol","Logo","img","size","VoteLogo","LogoURL","useLogo","id","symbolIndex","src","md","Remarkable","StyledLinkButton","button","VoteCard","Card","CardHeader","withoutSubtitle","BoxTitle","h4","BoxSubTitle","BoxHeader","VoteContent","TokenValue","AuthorLink","a","primary1","InfoText","fontWeight","ResultRow","ResultTitle","ResultProgress","ResultProgressBar","primary","Table","table","Thead","thead","Vote","useWeb3React","account","library","useState","selectedProposal","setSelectedProposal","selectedVote","setSelectedVote","showModal","setShowModal","showMore","setShowMore","votes","setVotes","result","setResult","status","setStatus","dispatch","useDispatch","useSelector","state","governance","spaces","governanceLoading","loading","proposals","api","Governance","match","params","space","useEffect","Object","keys","length","fetchSpaces","hasOwnProperty","fetchProposals","get","then","response","catch","error","console","log","history","push","transformVotes","selectedProposals","formatProposal","assign","getScores","strategies","network","scores","fromEntries","entries","map","transformed","strategy","i","balance","reduce","b","sort","results","totalVotes","msg","payload","choices","choice","values","filter","totalBalances","totalScores","sI","totalVotesBalances","ts","Date","now","toFixed","start","end","handleSubmit","useCallback","options","token","type","proposal","metadata","JSON","stringify","version","timestamp","toast","icon","signer","getSigner","signMessage","sig","sendMessage","res","success","Page","morePadding","Row","Col","xs","style","marginTop","Loading","color","width","height","active","header","name","whiteSpace","dangerouslySetInnerHTML","__html","render","body","option","index","onClick","bind","disabled","maxHeight","opacity","visibility","VoteItem","ListItem","s","marginLeft","href","target","rel","authorIpfsHash","moment","format","snapshot","shorten","role","aria-valuenow","aria-valuemin","aria-valuemax","Number","parseInt","Modal","show","centered","onHide","Header","closeButton","Title","Body","Button","variant"],"mappings":"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","file":"static/js/43.46fd7342.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  transition: .3s ease all;\n  width: 100%;\n  \n  &:not(:last-child) {\n    margin-bottom: 1.875rem;\n  }\n`\n\nconst InfoDesc = styled.span`\n  font-size: .75rem;\n  font-weight: 400;\n  margin: 0;\n  color: white;\n  \n  \n  @media (min-width: 768px) {\n    font-size: .875rem;\n    font-weight: 500;\n\n  }\n`\n\nconst listItem = props => {\n    return (\n        <Wrapper className=\"d-flex align-items-center justify-content-between\">\n            <InfoDesc>{props.title}</InfoDesc>\n            <div>{props.children}</div>\n        </Wrapper>\n    )\n}\n\nexport default listItem;","import React from 'react';\nimport { Jazzicon } from '@ukstv/jazzicon-react';\nimport styled from 'styled-components';\nimport {_numeral} from \"../../lib/utils\";\n\nexport const ModifiedJazzicon = styled(Jazzicon)`\n    width: 24px;\n    height: 24px;\n    margin-right: 10px;\n    \n    @media (min-width: 768px) {\n        width: 32px;\n        height: 32px;\n        margin-right: 15px;\n    }\n`\nconst Wrapper = styled.tr`\n  padding: 10px 0;\n  position: relative;\n  transition: .3s ease all;\n  margin-bottom: 0.625rem;\n  \n  td {\n    height: 40px;\n    &:last-child {\n      text-align: right;\n    }\n  }\n  \n  @media (min-width: 768px) {\n      background-color: ${({ theme }) => theme.modalBG};\n      \n      td {\n        border-top: 1px solid rgba(255, 255, 255, 0.5);\n        border-bottom: 1px solid rgba(255, 255, 255, 0.5);\n        height: 50px;\n        \n        &:first-child {\n          border-left: 1px solid rgba(255, 255, 255, 0.5);\n          border-top-left-radius: 18px;\n          border-bottom-left-radius: 18px;\n          padding-left: 30px;\n        }\n        \n        &:last-child {\n          border-right: 1px solid rgba(255, 255, 255, 0.5);\n          border-top-right-radius: 18px;\n          padding-right: 30px;\n          border-bottom-right-radius: 18px;\n          max-width: 80px;\n          text-align: left;\n        }\n      }\n      \n      \n      &:hover {\n        background-color: ${({ theme }) => theme.bg2};\n        border-color: rgba(255, 255, 255, 0.8);\n      }\n  }\n  \n`\n\nconst Text = styled.span`\n  color: white;\n  font-size: 0.875rem;\n  font-weight: 500;\n  \n  \n  @media (min-width: 768px) {\n    font-size: 1rem;\n  }\n`\nconst Address = styled.span`\n  color: white;\n  font-size: 0.75rem;\n  font-weight: 400;\n  \n  \n  @media (min-width: 768px) {\n    font-size: 1rem;\n  }\n`\n\nconst voteItem = props => {\n    return (\n        <Wrapper>\n            <td>\n                <div className=\"d-flex align-items-center\">\n                    <div className={'d-none d-lg-block'}>\n                        <ModifiedJazzicon address={props.address}/>\n                    </div>\n                    <Address>{props.address.slice(0, 6)}...{props.address.slice(-4)}</Address>\n                </div>\n\n            </td>\n            <td>\n                <Text className={'d-none d-lg-flex'}>{props.vote}</Text>\n            </td>\n            <td>\n                <Text>{_numeral(props.score)} {props.symbol}</Text>\n            </td>\n            {/*<div className=\"d-flex align-items-center\">*/}\n            {/*    <div className={'d-none d-lg-block'}>*/}\n            {/*        <ModifiedJazzicon address={props.address}/>*/}\n            {/*    </div>*/}\n            {/*    <Text>{props.address.slice(0, 6)}...{props.address.slice(-4)}</Text>*/}\n            {/*</div>*/}\n            {/*<Text className={'d-none d-lg-flex'}>{props.vote}</Text>*/}\n            {/*<Text>{_numeral(props.score)} {props.symbol}</Text>*/}\n        </Wrapper>\n    )\n}\n\nexport default voteItem;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {useLogo} from \"../../state/governance/hooks\";\n\nconst Logo = styled.img`\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  border-radius: ${({ size }) => size}px;\n  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.075);\n  display: none;\n  \n  @media (min-width: 768px) {\n  display: initial;\n  }\n`\n\nconst VoteLogo = props => {\n    const LogoURL = useLogo(props.id, props.symbolIndex);\n    return (\n        <Logo src={LogoURL} size={props.size}/>\n    )\n}\n\nexport default VoteLogo;","import React, { useEffect, useState, useCallback } from 'react';\nimport { Row, Col, Modal, Button } from 'react-bootstrap';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {_numeral, formatProposal, getScores} from '../../lib/utils';\nimport styled from 'styled-components';\n\nimport ListItem from '../../components/ListItem';\nimport Governance from \"../../http/governance\";\nimport Card from \"../../components/Card\";\nimport {fetchProposals, fetchSpaces} from \"../../state/governance/actions\";\nimport VoteItem, {ModifiedJazzicon} from '../../components/VoteItem';\nimport VoteLogo from \"../../components/VoteLogo\";\nimport moment from \"moment\";\nimport Loading from '../../components/Loading';\nimport {useWeb3React} from \"@web3-react/core\";\nimport {shorten} from \"../../state/governance/hooks\";\nimport {Remarkable} from \"remarkable\";\nimport Page from \"../../components/Page\";\nimport GradientButton from '../../components/UI/Button';\nimport {toast} from \"react-hot-toast\";\n\nconst md = new Remarkable();\n\nconst StyledLinkButton = styled.button`\n  font-weight: 500;\n  font-size: 1rem;\n  \n  @media (min-width: 768px) {\n  font-weight: 400;\n  }\n`\n\nconst VoteCard = styled(Card)`\n  @media (max-width: 767px) {\n    .card-body {\n      padding-top: 0; \n    }\n  }\n`\n\nconst CardHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: -5px;\n  \n  @media (min-width: 768px) {\n    margin: -10px 0 -18px;\n    height: ${({ withoutSubtitle }) => withoutSubtitle ? '70px' : 'auto'};\n  }\n`\n\nconst BoxTitle = styled.h4`\n  font-weight: 700;\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n  color: white;\n  margin: 0 auto 0 0;\n  padding-right: .75rem;\n  \n  \n  @media (min-width: 768px) {\n  padding-right: 0;\n  font-size: 1.25rem;\n  margin: 0 1.25rem 0 0;\n  }\n`\n\nconst BoxSubTitle = styled.span`\n  margin-bottom: .5rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  color: white;\n  display: none;\n  \n  @media (min-width: 768px) {\n    display: block;\n  }\n`\n\nconst BoxHeader = styled.div`\n  min-height: 40px;\n  display: flex;\n  align-items: center;\n  \n  & .label {\n    @media (max-width: 767px) {\n      height: 30px;\n      padding: 5px 17px;\n      border-radius: 12px;\n      font-size: .875rem;\n    }\n  }\n \n`\n\nconst VoteContent = styled.div`\n  line-height: 19px;\n  font-size: 1rem !important;\n  color: white;\n  font-weight: 400;\n  \n  & p {\n    margin: 0;\n    font-weight: 400;\n    font-size: 0.875rem;\n\n      @media (min-width: 768px) {\n        font-size: 1rem;\n      }\n  }\n  \n  & h1,\n  & h2,\n  & h3,\n  & h4,\n  & h5,\n  & h6 {\n    font-size: 1.25rem;\n    margin-bottom: 0;\n    font-weight: 500;\n    \n    \n      @media (min-width: 768px) {\n        font-size: 1.875rem;\n      }\n  }\n`\n\nconst TokenValue = styled.span`\n  font-size: 0.875rem;\n  font-weight: 500;\n  padding-left: 11px;\n  color: white;\n  \n  \n  @media (min-width: 768px) {\n    font-size: 1rem;\n    font-weight: 700;\n  }\n`\n\nconst AuthorLink = styled.a`\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 700;\n  font-size: 0.875rem;\n  \n  \n  @media (min-width: 768px) {\n    font-size: 1rem;\n  }\n  \n  &:focus,\n  &:active {\n    outline: none;\n  }\n`\nconst InfoText = styled.span`\n  font-size: 0.875rem;\n  font-weight: ${({ fontWeight}) => fontWeight || 700};\n  color: white;\n  \n  \n  @media (min-width: 768px) {\n    font-size: 1rem;\n    font-weight: 700;\n  }\n`\n\nconst ResultRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  \n  &:not(:last-child) {\n    margin-bottom: 40px;\n  }\n`\n\nconst ResultTitle = styled.span`\n  font-size: .875rem;\n  font-weight: 400;\n  margin: 0;\n  color: white;\n  \n  \n  @media (min-width: 768px) {\n    font-weight: 500;\n  }\n`\n\nconst ResultProgress = styled.div`\n  background-color: rgba(135, 220, 225, 0.3);\n  height: 5px;\n  border: none;\n  width: 100%;\n  border-radius: 20px;\n`\n\nconst ResultProgressBar = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n  border-radius: 20px;\n`\n\nconst Table = styled.table`\n  border-spacing: 0 10px;\n  border-collapse: separate;\n`\n\nconst Thead = styled.thead`\n  height: 1px;\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n  display: none;\n`\n\nconst Vote = (props) => {\n    const { account, library } = useWeb3React();\n    const [selectedProposal, setSelectedProposal] = useState(false)\n    const [selectedVote, setSelectedVote] = useState(null);\n    const [showModal, setShowModal] = useState(false);\n    const [showMore, setShowMore] = useState(false);\n    const [votes, setVotes] = useState({})\n    const [result, setResult] = useState({})\n    const [status, setStatus] = useState({});\n    const dispatch = useDispatch();\n    const {spaces, loading: governanceLoading, proposals} = useSelector(state => state.governance);\n    const api = new Governance();\n\n    let id = props.match.params.space;\n    let address = props.match.params.id;\n    let space = spaces[id]\n\n    useEffect(() => {\n        if(Object.keys(spaces).length === 0) {\n            dispatch(fetchSpaces());\n        } else {\n            if(spaces.hasOwnProperty(id)) {\n                dispatch(fetchProposals(id));\n                api.get('votes', { id, address})\n                    .then(response => {\n                        setVotes(response);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                    })\n            } else {\n                props.history.push('/governance');\n            }\n        }\n    }, [spaces, id, address, dispatch, props.history])\n\n    const getVotes = () => {\n        api.get('votes', { id, address})\n            .then(response => {\n                setVotes(response);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n\n    const transformVotes = async (votes, proposals) => {\n        let result = {};\n        if(Object.keys(votes).length > 0) {\n            const selectedProposals = proposals.hasOwnProperty(id) && proposals[id].hasOwnProperty(address) ? formatProposal(Object.assign({}, proposals[id][address])) : formatProposal({});\n            const scores = await getScores(\n                id,\n                space.strategies,\n                space.network,\n                library,\n                Object.keys(votes)\n            )\n            result.votes = Object.fromEntries(\n                Object.entries(votes)\n                    .map((vote) => {\n                        let transformed = [vote[0], Object.assign({}, vote[1])]\n                        transformed[1].scores = space.strategies.map(\n                            (strategy, i) => scores[i][transformed[1].address] || 0\n                        );\n                        transformed[1].balance = transformed[1].scores.reduce((a, b) => a + b, 0);\n                        return transformed;\n                    })\n                    .sort((a, b) => b[1].balance - a[1].balance)\n            );\n            result.results = {\n                totalVotes: selectedProposals.msg?.payload?.choices?.map(\n                    (choice, i) =>\n                        Object.values(result.votes).filter(\n                            (vote) => vote.msg.payload.choice === i + 1\n                        ).length\n                ),\n                totalBalances: selectedProposals.msg?.payload?.choices?.map((choice, i) =>\n                    Object.values(result.votes)\n                        .filter((vote) => vote.msg.payload.choice === i + 1)\n                        .reduce((a, b) => a + b.balance, 0)\n                ),\n                totalScores: selectedProposals.msg?.payload?.choices?.map((choice, i) =>\n                    space.strategies.map((strategy, sI) =>\n                        Object.values(result.votes)\n                            .filter((vote) => vote.msg.payload.choice === i + 1)\n                            .reduce((a, b) => a + b.scores[sI], 0)\n                    )\n                ),\n                totalVotesBalances: Object.values(result.votes).reduce(\n                    (a, b) => a + b.balance,\n                    0\n                )\n            };\n            setResult(result);\n        }\n    }\n\n    useEffect(() => {\n        transformVotes(votes, proposals);\n    }, [proposals, votes])\n\n    useEffect(() => {\n        if(proposals.hasOwnProperty(id)) {\n            if(proposals[id].hasOwnProperty(address)) {\n                setSelectedProposal(proposals[id][address]);\n                const ts = (Date.now() / 1e3).toFixed();\n                const { start, end } = proposals[id][address].msg.payload;\n                let state = ts > end ? {title: 'Closed', className: 'label-light-danger'} : ts > start ? {title: 'Active', className: 'label-light-success'} : {title: 'Pending', className: 'label-light-info'};\n                setStatus(state);\n            } else {\n                props.history.push(`/governance/${id}`)\n            }\n        } else {\n            setSelectedProposal(false)\n        }\n    }, [proposals, id, address, props.history]);\n\n\n    const handleSubmit = useCallback(async () => {\n        const options = {\n            token: spaces[id].token,\n            type: 'vote',\n            space: id,\n            payload: {\n                proposal: address,\n                choice: selectedVote,\n                metadata: {}\n            }\n        }\n        const msg = {\n            address: account,\n            msg: JSON.stringify({\n                version: '0.1.3',\n                timestamp: (Date.now() / 1e3).toFixed(),\n                ...options\n            })\n        };\n        try {\n            toast('Sending ...', {\n                icon: '💡'\n            })\n            const signer = library.getSigner(account);\n            msg.sig = await signer.signMessage(msg.msg);\n            const res = await api.sendMessage(msg);\n            toast.success('Your Vote is in!')\n            if(res.hasOwnProperty('ipfsHash')) {\n                getVotes();\n            }\n            setShowModal(false);\n        } catch(error) {\n            toast.error('Something went wrong!');\n        }\n\n    }, [selectedProposal, selectedVote, account, address, api, id, library, spaces])\n\n\n    return (\n        <Page title={'Governance'} morePadding>\n            <Row>\n                <Col xs={12} style={{ marginTop: -30 }}>\n                {governanceLoading && !selectedProposal ? (\n                    <Card>\n                        <div className=\"d-flex align-items-center justify-content-center py-5 w-100\">\n                            <Loading color={'primary'} width={40} height={40} active id={'vote-loading'}/>\n                        </div>\n                    </Card>\n                ) : selectedProposal && (\n                    <Row className={'custom-row'}>\n                        <Col className={'order-2 order-md-1'} xs={12} md={8}>\n                            <Row>\n                                <Col xs={12} className={'gutter-b'}>\n                                    <Card header={(\n                                        <CardHeader className=\"d-flex flex-column justify-content-around\">\n                                            <BoxSubTitle>Proposal</BoxSubTitle>\n                                            <BoxHeader>\n                                                <BoxTitle>{ selectedProposal.msg.payload.name}</BoxTitle>\n                                                {status && (\n                                                    <span className={`label ${status.className} label-lg font-weight-medium d-flex label-inline py-3`}>\n                                                        {status.title}\n                                                    </span>\n                                                )}\n                                            </BoxHeader>\n                                        </CardHeader>\n\n                                    )}>\n                                        <VoteContent className={'font-size-lg opacity-80'} style={{ whiteSpace: 'pre-wrap'}}\n                                           dangerouslySetInnerHTML={{ __html: md.render(selectedProposal.msg.payload.body) }} />\n                                    </Card>\n                                </Col>\n                                {status.title === 'Active' && (\n                                    <Col xs={12} className={'gutter-b'}>\n\n                                        <Card header={(\n                                            <CardHeader className=\"d-flex flex-column justify-content-around\">\n                                                <BoxSubTitle>Vote</BoxSubTitle>\n                                                <BoxHeader>\n                                                    <BoxTitle>Cast Your vote</BoxTitle>\n                                                </BoxHeader>\n                                            </CardHeader>\n\n                                        )}>\n                                            <div className=\"d-flex flex-column\">\n                                                {selectedProposal.msg.payload.choices.map((option, index) => {\n                                                    return (\n                                                        <button\n                                                            key={index}\n                                                            className={`btn ${index === selectedVote - 1 ? `btn-secondary-light` : `btn-light-secondary-light`} mb-2 btn-block py-3`}\n                                                            onClick={setSelectedVote.bind(this, index + 1)}\n                                                        >{option}</button>\n                                                    )\n                                                })}\n                                                <GradientButton\n                                                    className=\"py-3 mt-3 align-self-center\"\n                                                    disabled={!selectedVote}\n                                                    style={{ width: 250 }}\n                                                    onClick={() => setShowModal(true)}>Vote</GradientButton>\n                                            </div>\n                                        </Card>\n                                    </Col>\n                                )}\n                                <Col xs={12} className={'gutter-b'}>\n\n                                    <VoteCard header={(\n                                        <CardHeader className=\"d-flex flex-column justify-content-around\">\n                                            <BoxSubTitle>Proposal</BoxSubTitle>\n                                            <BoxHeader>\n                                                <BoxTitle>Votes</BoxTitle>\n                                                {votes && (\n                                                    <span className={`label label-light-primary label-lg font-weight-medium d-flex label-inline py-3`}>\n                                                        {Object.keys(votes).length}\n                                                    </span>\n                                                )}\n                                            </BoxHeader>\n                                        </CardHeader>\n\n                                    )}>\n                                        <div className=\"d-flex flex-column\">\n                                            <Table>\n                                                <Thead style={{ maxHeight: 1, opacity: 0, visibility: 'hidden'}}>\n                                                    <tr>\n                                                        <td>user</td>\n                                                        <td>vote</td>\n                                                        <td>power</td>\n                                                    </tr>\n                                                </Thead>\n                                                <tbody>\n                                                    {votes ? (showMore || (result.hasOwnProperty('votes') && Object.keys(result.votes || {}).length < 10)) ? Object.values(result.votes).map((vote, index) => {\n                                                        return (\n                                                            <VoteItem\n                                                                key={index}\n                                                                address={vote?.address}\n                                                                vote={selectedProposal?.msg?.payload?.choices[vote.msg.payload.choice - 1]}\n                                                                score={vote?.balance}\n                                                                symbol={space?.symbol}\n                                                            />\n                                                        )\n                                                    }) : result.hasOwnProperty('votes') && Object.values(result.votes).slice(0, 10).map((vote, index) => {\n                                                        return (\n                                                            <VoteItem\n                                                                key={index}\n                                                                address={vote?.address}\n                                                                vote={selectedProposal?.msg?.payload?.choices[vote.msg.payload.choice - 1]}\n                                                                score={vote?.balance}\n                                                                symbol={space?.symbol}\n                                                            />\n                                                        )\n                                                    }) : null}\n                                                </tbody>\n                                            </Table>\n                                            {votes ? (\n                                                <>\n                                                    {Object.keys(votes || {}).length > 10 ? (\n                                                        <StyledLinkButton className=\"btn btn-link \" onClick={() => setShowMore(true)}>Show More</StyledLinkButton>\n                                                    ) : null}\n                                                </>\n                                            ) : (\n                                                <div className=\"d-flex align-items-center justify-content-center py-5 w-100\">\n                                                    <Loading color={'primary'} width={40} height={40} active id={'votes-loading'}/>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </VoteCard>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col className={'order-1 order-md-2'} xs={12} md={4}>\n                            <Card header={(\n                                <CardHeader className=\"d-flex flex-column justify-content-around\" withoutSubtitle>\n                                    <BoxHeader>\n                                        <BoxTitle>Information</BoxTitle>\n                                    </BoxHeader>\n                                </CardHeader>\n                            )} >\n                                <div className=\"d-flex flex-column justify-content-start\">\n                                    <ListItem title={'Token(s)'}>\n                                        <div className=\"d-flex align-items-center justify-content-end\">\n                                            {spaces[id].strategies.map((s, index) => {\n                                                return (\n                                                        <div className=\"d-flex align-items-center\" style={{ marginLeft: index !== 0 ? '21px' : '0px'}}>\n                                                            <VoteLogo id={id} symbolIndex={index} size={30}/>\n                                                            <TokenValue>{s.params.symbol}</TokenValue>\n                                                        </div>\n                                                )\n                                            })}\n                                        </div>\n                                    </ListItem>\n\n                                    <ListItem title={'Author'}>\n                                        <div className=\"d-flex align-items-center\">\n                                            <ModifiedJazzicon address={selectedProposal && selectedProposal.address}/>\n                                            <AuthorLink href={`https://etherscan.io/address/${selectedProposal && selectedProposal.address}`} target={\"_blank\"} rel={'noopener noreferrer'}>\n                                                {selectedProposal && selectedProposal.address.slice(0, 6)}...{selectedProposal && selectedProposal.address.slice(-4)}</AuthorLink>\n                                        </div>\n                                    </ListItem>\n\n                                    <ListItem title={'IPFS'}>\n                                        <AuthorLink href={`https://ipfs.io/ipfs/${selectedProposal && selectedProposal.authorIpfsHash}`} target={\"_blank\"} rel={'noopener noreferrer'}>\n                                            #{selectedProposal && selectedProposal.authorIpfsHash.slice(0, 7)}\n                                        </AuthorLink>\n                                    </ListItem>\n                                    <ListItem title={'Start Date'}>\n\n                                        <InfoText fontWeight={400}>\n                                            {selectedProposal && moment(selectedProposal.msg.payload.start * 1e3).format('YYYY/MM/DD hh:mm')}\n                                        </InfoText>\n                                    </ListItem>\n                                    <ListItem title={'End Date'}>\n                                        <InfoText fontWeight={400}>\n                                            {selectedProposal && moment(selectedProposal.msg.payload.end * 1e3).format('YYYY/MM/DD hh:mm')}\n                                        </InfoText>\n                                    </ListItem>\n                                    <ListItem title={'Token'}>\n                                        <InfoText>\n                                            {selectedProposal && selectedProposal.address.slice(0, 6)}\n                                        </InfoText>\n                                    </ListItem>\n                                    <ListItem title={'Snapshot'}>\n                                        <AuthorLink href={`https://etherscan.io/block/${selectedProposal && selectedProposal.msg.payload.snapshot}`}\n                                                    target={\"_blank\"} rel={'noopener noreferrer'}>\n                                            {selectedProposal && selectedProposal.msg.payload.snapshot}\n                                        </AuthorLink>\n                                    </ListItem>\n                                </div>\n                            </Card>\n                            { result.results?.hasOwnProperty('totalBalances') && (\n                                <Card header={(\n                                    <CardHeader className=\"d-flex flex-column justify-content-around\" withoutSubtitle>\n                                        <BoxHeader>\n                                            <BoxTitle>Results</BoxTitle>\n                                        </BoxHeader>\n                                    </CardHeader>\n                                )} >\n                                    <div className=\"d-flex flex-column\">\n                                        {selectedProposal.msg.payload.choices.map((choice, i) => {\n                                            return (\n                                                <ResultRow>\n                                                    <div className=\"d-flex align-items-center justify-content-between mb-2\">\n                                                        <ResultTitle>\n                                                            {shorten(choice, 'choice')}\n                                                        </ResultTitle>\n\n                                                        <ResultTitle>\n                                                            { _numeral(result.results.totalBalances?.[i]) }\n                                                            { shorten(space.symbol, 'symbol') }\n                                                        </ResultTitle>\n\n                                                        <ResultTitle>\n                                                            {!result.results.totalVotesBalances\n                                                                ? 0\n                                                                : `${(((100 / result.results.totalVotesBalances) *\n                                                                    result.results.totalBalances?.[i])).toFixed(2)}%`}\n                                                        </ResultTitle>\n                                                    </div>\n                                                    <ResultProgress className={`progress progress-xs w-100`}>\n                                                        <ResultProgressBar\n                                                             role=\"progressbar\"\n                                                             aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"\n                                                             style={{\n                                                                 width: `${!result.results.totalVotesBalances ? '0' : Number.parseInt(((100 / result.results.totalVotesBalances) *\n                                                                     result.results.totalBalances?.[i]))}%`\n                                                             }} />\n                                                    </ResultProgress>\n                                                </ResultRow>\n                                            )\n                                        })}\n                                    </div>\n                                </Card>\n                            )}\n                        </Col>\n                    </Row>\n                )}\n                </Col>\n            </Row>\n            {selectedProposal && (\n                <Modal show={showModal} centered onHide={() => setShowModal(false)}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Confirm Vote</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n                        <p>Are you sure you want to vote \"{\n                            selectedProposal.msg.payload.choices[selectedVote - 1]\n                        }\"? <br />This action <b>cannot</b> be undone.\n                        </p>\n                        <div className=\"pt-4 d-flex align-items-center justify-content-end\">\n                            <Button variant=\"outline-danger\" onClick={() => setShowModal(false)}>Close</Button>\n                            <Button variant=\"primary\" onClick={handleSubmit} className={'ml-3'}>Vote</Button>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n            )}\n\n        </Page>\n    )\n}\n\nexport default Vote;\n"],"sourceRoot":""}